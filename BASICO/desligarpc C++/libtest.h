/**============================================================
*Projeto: libPuppet.hpp.                Betaname: libtest.hpp
*==============================================================
* @Author Puppet0x40
* @version 0.26c 04/04/18
* @file libtest.h
* @begin 08/01/18
* @update 04/05/18
* @copyright (C) 2018 by Puppet0x40
* @email puppet0x40@gmail.com
*============================================================*/


#ifndef LIBTEST_H_INCLUDED
#define LIBTEST_H_INCLUDED
/*-----------TODAS AS BIBLIOTECAS USADA --------*/
#include <iostream>     //BIBLIOTECA "NOVA" DO C++
#include <cstdlib>      //BIBLIOTECA ANTIGA DO C
#include <cstdio>       //BIBLIOTECA ANTIGA DO C
#include <string>       //BIBLIOTECA !
#include <clocale>      //BIBLIOTECA LOCALIZAÇÃO
#include <ctime>        //BIBLIOTECA TEMPO
#include <fstream>      //BIBLIOTECA  DE FILES
/*----------------------------------------------*/
#define pausa getchar();getchar()                        /// pausa
#define cls system("cls")                               /// LIMPA TELA CMD!
#define VERSAO "0.26c"

using namespace std;  // AJUDA MUITO
///===============================================================================================
///                                  PRE-CHAMADA DE FUNÇÕES
///===============================================================================================
void offPc( int );                          // FUNCAO DE DESLIGA PC
void cancelOffPc();                         // CANCELA A FUNCAO DE DESLIGA PC
void restPc( int );                         // FUNCAO DE REINICIAR
int  MinToSeg( int );                       // CONVERTE MINUNTOS PARA SEGUNDOS
void sobre();                               /// !EMPTY!
void sobreNew();                            // RELATÓERIOS DE FUNÇÕES NOVAS
void puppet();                              /// !EMPTY!
void logocrazy(int);                        // EXTRA! APENAS PARA DIVERSÃO
void mudaCor( int numColor );               // MUDAR A COR DE TEXTO E FUNDOS
int  msg( string, int );                    // MENSAGEM PARA USAR COM OPÇÃO
void mainMenu();                            // MENU PRINCIPAL
void desligaPc(int);                        // FUNÇÃO REFINADA DE OFFPC
void logo(int);                             /// !EMPTY!
void cmdbesta();                            /// !EMPTY!
inline void limpabuffer();                  /// !EMPTY!
///===========================================#####================================================




///===============================================================================================
///                                     FUNÇÕES REFINADA
///===============================================================================================
void desligaPc(int tipo){                   //
    int valor;
    cout << " Tempo em minutos: ";
    cin >> valor;
    if(tipo == 1)
        offPc( MinToSeg(valor ));
    if(tipo == 2)
        restPc( MinToSeg(valor ));
}


void logocrazy(int typelogo){               //
   int x = 0;
   system("mode con:cols=80 lines=25"); // fixa tamanho do cmd com 50 colunas e 40 linhas
   while(x < 99){
      mudaCor(x++);
      logo(typelogo);
      getchar();
      cls;
   }
}
///==========================================#####================================================




///===============================================================================================
///                                         FUNÇÕES BÁSICAS
///===============================================================================================
void sobre(){                               //

    cout <<"\n\tAutor:...........Puppet0x40\n";
    cout <<"\tVersão:.........." << VERSAO << "\n\a";
    cout <<"\tData:............29/03/2018 \n";
    pausa;
}

void sobreNew(){                            //
    cls;
    cout << "Relatório de novas funções da  atualizacão\n" << endl;
    cout << "Versão atual .... "<< VERSAO << endl;
    cout << "novidades até agora são:\n" << endl;
    cout << "Função \"reniciar pc\" corrigida" << endl;
    cout << "Função \"logocrazy\" e \"logo\" atualizado " << endl;
    cout << "Bugs \"Corrigidos\" " << endl;
    getchar();
}

void offPc(int valor){                      //
    char text[32];
    sprintf(text,"shutdown -s -t %d", valor);
    if(system(text) == 1190){
        cls;
        cancelOffPc();
        system(text);
        cls;
    }
}

void restPc(int valor){                     //
    char text[32];
    sprintf(text,"shutdown -r -t %d", valor);
    if(system(text) == 1190){
        cls;
        cancelOffPc();
        system(text);
        cls;
    }
}

void cancelOffPc(){                     //
    system("shutdown -a");
    cls;
}

int MinToSeg(int valor){                    //
    return valor*60;
}

void mudaCor(int numcolor){                 //
    char text[32];
    sprintf(text,"color %d", numcolor);
    system(text);
}

inline int Dino_random(){                   //
    srand((int)time(NULL));
    return rand() % 999 ;
}

inline int Dino_random(int tamanho){        //
    srand((int)time(NULL));
    return rand() % tamanho ;
}

void logo(int tipo){                        //
    switch(tipo){
    case 1:
    //LOGO 01
    cout << "@@@@@@@@@@@@@@@     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@     @@@@@@@@@@@@@@@";
    cout << "@@@@@@@@@@@@@@@     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@     @@@@@@@@@@@@@@@";
    cout << "@@@@@@@@@@          @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@          @@@@@@@@@@";
    cout << "@@@@@@@@@@          @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@          @@@@@@@@@@";
    cout << "@@@@@@@@@@          @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@          @@@@@@@@@@";
    cout << "@@@@@@@@@@@@@@@@@@@@@@@@                                @@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "@@@@@@@@@@@@@@@@@@@@@@@@                                @@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "@@@@@@@@@@@@@@@@@@@@                                        @@@@@@@@@@@@@@@@@@@@";
    cout << "@@@@@@@@@@@@@@@@@@@@                                        @@@@@@@@@@@@@@@@@@@@";
    cout << "@@@@@@@@@@@@@@@@@@@@     !!!!!!!!!!          !!!!!!!!!!     @@@@@@@@@@@@@@@@@@@@";
    cout << "@@@@@@@@@@@@@@@@@@@@     !!PUPPET!!          !!!0x40!!!     @@@@@@@@@@@@@@@@@@@@";
    cout << "@@@@@@@@@@@@@@@@@@@@     !!!!!!!!!!          !!!!!!!!!!     @@@@@@@@@@@@@@@@@@@@";
    cout << "@@@@@@@@@@@@@@@@@@@@                                        @@@@@@@@@@@@@@@@@@@@";
    cout << "@@@@@@@@@@@@@@@@@@@@                                        @@@@@@@@@@@@@@@@@@@@";
    cout << "@@@@@@@@@@@@@@@@@@@@                                        @@@@@@@@@@@@@@@@@@@@";
    cout << "@@@@@@@@@@@@@@@@@@@@                                        @@@@@@@@@@@@@@@@@@@@";
    cout << "@@@@@@@@@@@@@@@@@@@@@@@@                                @@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "@@@@@@@@@@@@@@@@@@@@@@@@                                @@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "@@@@@@@@@@@@@@@@@@@@@@@@                                @@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "@@@@@@@@@@@@@@@@@@@@@@@@                                @@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "@@@@@@@@@@          @@@@@@     @@@@@@      @@@@@      @@@@@@          @@@@@@@@@@";
    cout << "@@@@@@@@@@          @@@@@@     @@@@@@      @@@@@      @@@@@@          @@@@@@@@@@";
    cout << "@@@@@@@@@@          @@@@@@     @@@@@@      @@@@@      @@@@@@          @@@@@@@@@@";
    cout << "@@@@@@@@@@@@@@@     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@     @@@@@@@@@@@@@@@";
    cout << "@@@@@@@@@@@@@@@     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@     @@@@@@@@@@@@@@";
    break;

    case 2:
    //LOGO 02
    cout << "010101010101011     0101010101010101011010111010101010101001     010101010110110";
    cout << "110101011101011     0110101010101010101000101100101100010101     010101010101010";
    cout << "0101110010          1011111001011100001110101111100101010101          1110100111";
    cout << "0100110000          1011010010010010101011111101000100101111          1010110101";
    cout << "0101010100          1101001010101101101000101010101001010110          1010101011";
    cout << "010101010101010111110101                                010101010110101010100101";
    cout << "110101010110101001010110                                010101011110001010001010";
    cout << "01010101010001010101                                        01010111101010101010";
    cout << "01010101000010110011                                        01001100101010000001";
    cout << "11010110111010101011     !!!!!!!!!!          !!!!!!!!!!     01010010010011111001";
    cout << "01001010001111010101     !!PUPPET!!          !!!0x40!!!     01010110010101010101";
    cout << "01010010101110101001     !!!!!!!!!!          !!!!!!!!!!     01011010101111101001";
    cout << "01010101010001010101                                        01010111101010101010";
    cout << "01010101010100000111                                        01010101010110101011";
    cout << "01010101000010110011                                        01001100101010000001";
    cout << "01010101010001010101                                        01010111101010101010";
    cout << "010100100101001001010101                                011010100101001010101010";
    cout << "110010100101010101010101                                010100100101110101010101";
    cout << "100011110101010101010101                                111111011101111000010110";
    cout << "010100100101001001010101                                011010100101001010101010";
    cout << "0101011101          010101     010110      10101      010110          1010101010";
    cout << "0101010101          010101     011101      11101      111010          1011110110";
    cout << "0101110101          101110     101010      11111      010000          0101101010";
    cout << "1011001011     010101010101010101011101010101010101010110100     010101110100101";
    cout << "0101101011     110010101000101001010101100000000111111011100     01010101010101";
    break;


    case 3:
            //LOGO 03
            cout << "0110101011010111011101111110101011111011010111111010110101010";
            cout << "0101111101010101011101010111010101011001010101010101101010111";
            cout << "0101010101001011101100010101010101010101010000010100010101010";
            cout << "0110101010110101000100110110111001010111010010101101011010101";
            cout << "0101111101010010111010101110101010001101010101010101101010111";
            cout << "0101010101010101110110101010101010101010101010010101010111001";
            cout << "1110101010101011001010110101010101011101011010010101010101011";
            cout << "0101010101010111011110110101010101010100101010101001010101010";
            cout << "0110101010101101101011111010101110101010101101010010001010101";
            cout << "0110101011010111011101111110101011111011010111111010110101010";
            cout << "0101111101010110101101010101011010101010111111110101101010110";
            cout << "1010101010101110110011010101010101010101010101010101010011011";
            cout << "1111110101010101010111011010101010101010101010101010101010011";
            cout << "0110101010101110110111011101010111010101010110101101000000101";
            cout << "1111110111110101011010101101010101010101011010               ";
            cout << "PUPPET0x40               101101010101010101011001010101010101";
            cout << "0101010101011011101101001101010101010101010101010101001011101";
            cout << "0110101010101101101111100110101110101010101101011010101010101";
            cout << "0101111101011010100000010011010101010110101010101010110101011";
            cout << "0101010101101101111111011001101010101010101010101010101010101";
            cout << "0110101010101111111101101110111010101110101010101101011010101";
            cout << "0101111101010101010101010101010110110101011111101010101101010";
            cout << "0101010101011011101101010101001010101010101010111111010101011";
            cout << "0110101010101101101111101010110110111111011010101101011010101";
            cout << "1111010111110110101101010101010110010110101010101010110101011";
            cout << "0101011010110101110111010101011101010101010101010101010101010";
            cout << "0111101000001010101101101111101010101110101010101101011010101";
            cout << "011010101010110110111110101011011011111101101010110101101010";
            cout << "1111010111110110101101010101010110010110101010101010110101011";
            cout << "0110101010101101101111101010110110111111011010101101011010101";
            cout << "1111010111110110101101010101010110010110101010101010110101011";
            cout << "0111111101111101010101010101010101110110101010101010110101011";
            cout << "111111010101010101011101101010101010101010101 ";

    break;

    case 4:
            cout << "######  ##########################  ######";
            cout << "###     ##########################     ###";
            cout << "##########                      ##########";
            cout << "########                          ########";
            cout << "########                          ########";
            cout << "########   ########     #######   ########";
            cout << "########  ##PUPPET##   ###0X40##  ########";
            cout << "########   ########     #######   ########";
            cout << "########                          ########";
            cout << "########                          ########";
            cout << "##########                      ##########";
            cout << "##########                      ##########";
            cout << "############   ####    ####   ############";
            cout << "###     ####   ####    ####   ####     ###";
            cout << "######  ##########################  #####";
    break;


    }
}


///==============================================#####=============================================



///================================================================================================
///    MODELO DE BLOCO DE CODIGOS SEPARADOR !!!APENA PARA DEIXA VISUALMENTE ORGANIZADO O CODIGO!!!
///================================================================================================
/*CODE! */
/*
    NO CODE BLOCKS FICA COM ERROS DE ESCRITA POIS NAO TO ESCREVENDO EM INGLÊS !!!
    !!!CORRIGIDO!!! DESATIVE O CORRETOR ORTOGRÁFICO OK

*/
///=============================================######=============================================
#endif // LIBTEST_H_INCLUDED
